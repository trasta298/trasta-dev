---
import Layout from '../layouts/Layout.astro'
import Card from '../components/Card.astro'
import BlogCard from '../components/BlogCard.astro'
import ProfileCard from '../components/ProfileCard.astro'
import { Content as Profile } from '../components/Profile.mdx'
import { css } from '../../styled-system/css'

import { getCollection } from 'astro:content'
import itika from '../assets/itika.png'

const worksEntries = await getCollection('works')
const blogEntriesRaw = await getCollection('blog')
const blogEntries = blogEntriesRaw
  .filter(entry => !entry.data.draft)
  .map(entry => ({
    href: `/blog/${entry.slug}`,
    title: entry.data.title,
    date: entry.data.date,
    emoji: entry.data.emoji,
    domain: 'trasta.dev',
  }))
const externalEntries = [
  {
    href: 'https://trap.jp/post/1262/',
    title: '2020年度を振り返って',
    date: '2021/04/01',
    emoji: '📝',
    domain: 'trap.jp',
  },
  {
    href: 'https://trap.jp/post/1365/',
    title: 'ICTSC 夏の陣に参加してきました',
    date: '2021/08/29',
    emoji: '🏓',
    domain: 'trap.jp',
  },
  {
    href: 'https://zenn.dev/trasta/articles/3d9c758192f51d',
    title: '範囲選択で翻訳してくれるツールを作った',
    date: '2024/10/26',
    emoji: '🌐',
    domain: 'zenn.dev',
  },
  {
    href: 'https://trap.jp/post/2432/',
    title: 'ISUCON14 fail記 KatoMegumi',
    date: '2024/12/12',
    emoji: '🏆',
    domain: 'trap.jp',
  },
]
const blogs = [...blogEntries, ...externalEntries]
---

<Layout title="trasta" description="trastaのぺーじ" thumbnail={itika.src}>
  <main
    class={css({
      display: 'flex',
      flexDirection: 'column',
      alignItems: 'center',
      height: '100%',
      width: '100%',
    })}
  >
    <div
      class={css({
        maxWidth: '1024px',
        width: '100%',
        px: '16px',
        pt: '48px',
        pb: '64px',
      })}
    >
      <ProfileCard />
      <div class={css({ mt: '64px' })}>
        <Profile />
      </div>
      <h1 class={css({ mt: '32px' })}>やってきたこと</h1>
      <div
        class={css({
          py: '32px',
          display: 'grid',
          gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))',
          gap: '16px',
        })}
      >
        {
          worksEntries
            .filter(entry => !entry.data.draft)
            .sort((a, b) => (b.data.date > a.data.date ? 1 : -1))
            .map(entry => (
              <a
                href={`/works/${entry.slug}`}
                class={css({ color: 'text', textDecoration: 'none' })}
              >
                <Card
                  title={entry.data.title}
                  description={entry.data.description}
                  image={entry.data.cover}
                />
              </a>
            ))
        }
      </div>
      <h1 class={css({ mt: '32px' })}>ブログ</h1>
      <div
        class={css({
          mt: '32px',
          display: 'grid',
          gridTemplateColumns:
            'repeat(auto-fill, minmax(min(400px, 90%), 1fr))',
          gap: '16px',
        })}
      >
        {
          blogs
            .sort((a, b) => (b.date > a.date ? 1 : -1))
            .map(entry => (
              <a
                href={entry.href}
                class={css({ color: 'text', textDecoration: 'none' })}
              >
                <BlogCard
                  emoji={entry.emoji}
                  title={entry.title}
                  date={entry.date}
                  domain={entry.domain}
                />
              </a>
            ))
        }
      </div>
    </div>
  </main>
</Layout>
