---
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import { ViewTransitions } from 'astro:transitions'
import { css } from '../../styled-system/css'
import "../styles/panda.css"

interface Props {
  title: string
  description: string
  thumbnail: string
  hideFooter?: boolean
}

const { title, description, thumbnail, hideFooter } = Astro.props

const domain = 'https://trasta.dev'
const canonicalURL = new URL(Astro.url.pathname, domain)
const thumbnailURL = new URL(thumbnail, domain)
---

<!doctype html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="trasta's page" />
    <meta
      name="viewport"
      content="width=device-width,initial-scale=1.0,minimum-scale=1.0"
    />
    <meta property="og:title" content={title} />
    <meta property="og:type" content="website" />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={thumbnailURL} />
    <meta property="og:url" content={canonicalURL} />
    <meta name="twitter:card" content="summary_large_image" />

    <link rel="icon" type="image/png" href="/favicon.png" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@500;700&family=Noto+Sans:wght@500;600&display=swap"
      rel="stylesheet"
    />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <ViewTransitions />

    <!-- Google tag (gtag.js) -->
    <script
      type="text/partytown"
      src="https://www.googletagmanager.com/gtag/js?id=G-60PX17XX9G"></script>
    <script type="text/partytown">
      window.dataLayer = window.dataLayer || []
      function gtag() {
        dataLayer.push(arguments)
      }
      gtag('js', new Date())
      gtag('config', 'G-60PX17XX9G')
    </script>

    <script is:inline>
      const theme = (() => {
        if (typeof localStorage !== 'undefined') {
          const localTheme = localStorage.getItem('theme')
          if (localTheme) {
            return localTheme
          }
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark'
        }
        return 'light'
      })()

      if (theme === 'light') {
        document.documentElement.classList.remove('dark')
      } else {
        document.documentElement.classList.add('dark')
      }

      window.localStorage.setItem('theme', theme)
    </script>
  </head>
  <body
    class={css({
      bg: 'bg',
      color: 'text',
      display: 'grid',
      gridTemplateRows: 'auto 1fr',
      minHeight: '100dvh',
      fontFamily: `'Noto Sans', 'Noto Sans JP', sans-serif`,
      // transition: 'background 0.3s',
    })}
  >
    <Header />
    <div><slot /></div>
    {!hideFooter && <Footer />}
  </body>
</html>
